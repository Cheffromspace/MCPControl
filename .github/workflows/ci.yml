name: CI

on:
  pull_request:
    branches: [ main, stage ]
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install build dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libx11-dev libxtst-dev libpng-dev
    
    - name: Cache global dependencies
      id: cache-globals
      uses: actions/cache@v3
      with:
        path: |
          ${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Roaming\npm\node_modules\node-gyp' || '~/.npm/node_modules/node-gyp' }}
          ${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Roaming\npm\node_modules\cmake-js' || '~/.npm/node_modules/cmake-js' }}
        key: ${{ runner.os }}-global-deps-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-global-deps-
    
    - name: Install global dependencies
      if: steps.cache-globals.outputs.cache-hit != 'true'
      run: |
        npm install -g node-gyp
        npm install -g cmake-js
    
    - name: Install dependencies
      run: npm ci
      
    - name: Security audit
      run: npm audit --audit-level=high
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --high
      
    - name: Build project
      run: node scripts/build.js
    
    - name: Run ESLint
      run: npm run lint

    - name: Cache build output
      id: cache-build
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-
    
    - name: Run tests
      run: npm test
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
