name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install cmake-js globally
      run: npm install -g cmake-js
    
    - name: Clone and build libnut-core
      run: |
        cd ..
        git clone https://github.com/nut-tree/libnut.git libnut-core
        cd libnut-core
        npm install
        cmake-js rebuild
        cd ../nutjs-windows-control
    
    - name: Cache libnut-core
      uses: actions/cache@v3
      with:
        path: ../libnut-core
        key: ${{ runner.os }}-libnut-core-${{ hashFiles('../libnut-core/**') }}
        restore-keys: |
          ${{ runner.os }}-libnut-core-

    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Lint
      run: |
        npx eslint . --ext .ts
        npx prettier --check "src/**/*.ts"
        
    - name: Security audit
      run: npm audit --audit-level=high
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --high
      
    - name: Build
      run: npm run build
    
    - name: Run tests with coverage threshold
      run: |
        npx vitest run --coverage
        npx vitest run --coverage.threshold.global.lines=80 --coverage.threshold.global.functions=80 --coverage.threshold.global.branches=70 --coverage.threshold.global.statements=80
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
